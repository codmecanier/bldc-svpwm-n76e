C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    02/23/2019 21:02:51 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE BLDC_WITH_HALL
OBJECT MODULE PLACED IN .\Objects\BLDC with Hall.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE BLDC with Hall.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\BLDC with Hall.lst) TABS(2) OBJECT(.\Objects\BLDC with Hall.obj)

line level    source

   1          #include <N76E003.H>
   2          #include "BLDC with Hall.h"
   3          #include "3PhaseInverter.h"
   4          
   5          bit BLDCReverse = 1;
   6          bit HA,HB,HC;
   7          bit Hall_Mode_60deg = 1;
   8          
   9          sbit P13 = P1^3;
  10          sbit P14 = P1^4;
  11          sbit P15 = P1^5;
  12          
  13          unsigned char BLDCSpeed;
  14          
  15          static unsigned char BLDC_Previous_Cycle = 0;
  16          
  17          void SetBLDCDirPWM(unsigned char pwm, bit dir)
  18          {
  19   1        BLDCReverse = dir;
  20   1        BLDCSpeed = pwm;
  21   1      }
  22          
  23          bit GetBLDCDirection()
  24          {return BLDCReverse;}
  25          
  26          void UpdateHall() using 2
  27          { 
  28   1        HA = HAPort;
  29   1        HB = HBPort;
  30   1        HC = HCPort;
  31   1      }
  32          
  33          void HallGpioInit()
  34          {
  35   1        P1M1 &= 0XC7;
  36   1        P1M2 &= 0XC7; 
  37   1        TA = 0X0AA;
  38   1        TA = 0X55;
  39   1        SFRS = 1;
  40   1        P1S |= 0X18;
  41   1        TA = 0X0AA;
  42   1        TA = 0X55;
  43   1        SFRS = 0;
  44   1        HAPort = 1;
  45   1        HBPort = 1;
  46   1        HCPort = 1;
  47   1      }
  48          
  49          unsigned char DetermineCurrentElecCycle(bit reverse) using 3
  50          { 
  51   1        if(HAPort)
  52   1        {
  53   2          if(Hall_Mode_60deg ^ HBPort)
  54   2          {
C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    02/23/2019 21:02:51 PAGE 2   

  55   3            if(HCPort)
  56   3            {
  57   4              if(reverse)
  58   4                return 5;
  59   4              else
  60   4                return 3;   
  61   4            }
  62   3            else
  63   3            {
  64   4              if(reverse)
  65   4                return 4;
  66   4              else
  67   4                return 2;
  68   4            }
  69   3          }
  70   2          else
  71   2          {
  72   3            if(HCPort)
  73   3            {
  74   4              return 0;   //error
  75   4            }
  76   3            else
  77   3            {
  78   4              if(reverse)
  79   4                return 3;
  80   4              else
  81   4                return 1;
  82   4            }
  83   3          }
  84   2        }
  85   1        else
  86   1        {
  87   2          if(Hall_Mode_60deg ^ HBPort)
  88   2          {
  89   3            if(HCPort)
  90   3            {
  91   4              if(reverse)
  92   4                return 6;
  93   4              else
  94   4                return 4;
  95   4            }
  96   3            else
  97   3            {
  98   4              return 0; //error
  99   4            }
 100   3          }
 101   2          else
 102   2          {
 103   3            if(HCPort)
 104   3            {
 105   4              if(reverse)
 106   4                return 1;
 107   4              else
 108   4                return 5;     
 109   4            }
 110   3            else
 111   3            {
 112   4              if(reverse)
 113   4                return 2;
 114   4              else
 115   4                return 6; 
 116   4            }
C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    02/23/2019 21:02:51 PAGE 3   

 117   3          }
 118   2        }
 119   1        return 0;
 120   1      }
 121          
 122          void UpdateBLDCInverter(unsigned char eleccycle) using 3
 123          {
 124   1        if(BLDC_Previous_Cycle!= eleccycle)
 125   1        {
 126   2          EA = 0;
 127   2          switch(eleccycle)
 128   2          {
 129   3            case 1: {     
 130   4              PMEN = 0X30;
 131   4              PWM0L = BLDCSpeed;
 132   4              PWM2L = 0;
 133   4              PWMCON0 |= 0X40;
 134   4              TA = 0X0AA;
 135   4              TA = 0X55;
 136   4              SFRS = 1;
 137   4              PWMINTC=0X10;
 138   4              TA = 0X0AA;
 139   4              TA = 0X55;
 140   4              SFRS = 0;
 141   4              break;
 142   4            }
 143   3            case 2: {
 144   4              PMEN = 0X0C;
 145   4              PWM0L = BLDCSpeed;
 146   4              TA = 0X0AA;
 147   4              TA = 0X55;
 148   4              SFRS = 1;
 149   4              PWM4L = 0;
 150   4              PWMINTC=0X10;
 151   4              TA = 0X0AA;
 152   4              TA = 0X55;
 153   4              SFRS = 0;
 154   4              PWMCON0 |= 0X40;
 155   4              break;
 156   4            }
 157   3            case 3: {
 158   4              PMEN = 0X03;
 159   4              PWM2L = BLDCSpeed;
 160   4              TA = 0X0AA;
 161   4              TA = 0X55;
 162   4              SFRS = 1;
 163   4              PWM4L = 0;
 164   4              PWMINTC=0X12;
 165   4              TA = 0X0AA;
 166   4              TA = 0X55;
 167   4              SFRS = 0;
 168   4              PWMCON0 |= 0X40;
 169   4              break;
 170   4            }
 171   3            case 4: {     
 172   4              PMEN = 0X30;
 173   4              PWM2L = BLDCSpeed;
 174   4              TA = 0X0AA;
 175   4              TA = 0X55;
 176   4              SFRS = 1;
 177   4              PWMINTC=0X12;
 178   4              TA = 0X0AA;
C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    02/23/2019 21:02:51 PAGE 4   

 179   4              TA = 0X55;
 180   4              SFRS = 0;
 181   4              PWM0L = 0;
 182   4              PWMCON0 |= 0X40;
 183   4              break;
 184   4            }
 185   3            case 5: {
 186   4              PMEN = 0X0C;
 187   4              TA = 0X0AA;
 188   4              TA = 0X55;
 189   4              SFRS = 1;
 190   4              PWM4L = BLDCSpeed;
 191   4              PWMINTC=0X14;
 192   4              TA = 0X0AA;
 193   4              TA = 0X55;
 194   4              SFRS = 0;
 195   4              PWM0L = 0;
 196   4              PWMCON0 |= 0X40;
 197   4              break;
 198   4            }
 199   3            case 6: {
 200   4              PMEN = 0X03;
 201   4              TA = 0X0AA;
 202   4              TA = 0X55;
 203   4              SFRS = 1;
 204   4              PWM4L = BLDCSpeed;    
 205   4              PWMINTC=0X14;
 206   4              TA = 0X0AA;
 207   4              TA = 0X55;
 208   4              SFRS = 0;
 209   4              PWM2L = 0;
 210   4              PWMCON0 |= 0X40;
 211   4              break;
 212   4            }
 213   3            case 0:
 214   3              break;
 215   3          }
 216   2          ADCCON0 &= 0XCF;
 217   2          if((eleccycle == 1)||(eleccycle == 2))
 218   2          {
 219   3            ADCCON0 |= 0X00;  // PWM0 trig
 220   3          }
 221   2          else if((eleccycle == 3)||(eleccycle == 4))
 222   2          {
 223   3            ADCCON0 |= 0X10;  // PWM2 trig
 224   3          }
 225   2          else
 226   2          {
 227   3            ADCCON0 |= 0X20;  // PWM4 trig
 228   3          }
 229   2          EA = 1;
 230   2          BLDC_Previous_Cycle= eleccycle;
 231   2        }
 232   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    445    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    02/23/2019 21:02:51 PAGE 5   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
