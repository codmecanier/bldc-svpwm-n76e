C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    01/23/2019 17:22:28 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE BLDC_WITH_HALL
OBJECT MODULE PLACED IN .\Objects\BLDC with Hall.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE BLDC with Hall.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\BLDC with Hall.lst) TABS(2) OBJECT(.\Objects\BLDC with Hall.obj)

line level    source

   1          #include <N76E003.h>
   2          #include "BLDC with Hall.h"
   3          #include "3PhaseInverter.h"
   4          
   5          bit BLDCReverse = 1;
   6          bit HA,HB,HC;
   7          bit Hall_Mode_60deg = 1;
   8          
   9          unsigned char BLDCSpeed;
  10          
  11          void SetBLDCDirPWM(unsigned char pwm, bit dir)
  12          {
  13   1        BLDCReverse = dir;
  14   1        BLDCSpeed = pwm;
  15   1      }
  16          
  17          void UpdateHall() using 2
  18          { 
  19   1        HA = HAPort;
  20   1        HB = HBPort;
  21   1        HC = HCPort;
  22   1      }
  23          
  24          void HallGpioInit()
  25          {
  26   1        P1M1 &= 0XC7;
  27   1        P1M2 &= 0XC7; 
  28   1        TA = 0X0AA;
  29   1        TA = 0X55;
  30   1        SFRS = 1;
  31   1        P1S |= 0X18;
  32   1        TA = 0X0AA;
  33   1        TA = 0X55;
  34   1        SFRS = 0;
  35   1        HAPort = 1;
  36   1        HBPort = 1;
  37   1        HCPort = 1;
  38   1      }
  39          
  40          unsigned char DetermineCurrentElecCycle(bit reverse) using 1
  41          { 
  42   1        if(HAPort)
  43   1        {
  44   2          if(Hall_Mode_60deg ^ HBPort)
  45   2          {
  46   3            if(HCPort)
  47   3            {
  48   4              if(reverse)
  49   4                return 5;
  50   4              else
  51   4                return 3;   
  52   4            }
  53   3            else
  54   3            {
C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    01/23/2019 17:22:28 PAGE 2   

  55   4              if(reverse)
  56   4                return 4;
  57   4              else
  58   4                return 2;
  59   4            }
  60   3          }
  61   2          else
  62   2          {
  63   3            if(HCPort)
  64   3            {
  65   4              return 0;   //error
  66   4            }
  67   3            else
  68   3            {
  69   4              if(reverse)
  70   4                return 3;
  71   4              else
  72   4                return 1;
  73   4            }
  74   3          }
  75   2        }
  76   1        else
  77   1        {
  78   2          if(Hall_Mode_60deg ^ HBPort)
  79   2          {
  80   3            if(HCPort)
  81   3            {
  82   4              if(reverse)
  83   4                return 6;
  84   4              else
  85   4                return 4;
  86   4            }
  87   3            else
  88   3            {
  89   4              return 0; //error
  90   4            }
  91   3          }
  92   2          else
  93   2          {
  94   3            if(HCPort)
  95   3            {
  96   4              if(reverse)
  97   4                return 1;
  98   4              else
  99   4                return 5;     
 100   4            }
 101   3            else
 102   3            {
 103   4              if(reverse)
 104   4                return 2;
 105   4              else
 106   4                return 6; 
 107   4            }
 108   3          }
 109   2        }
 110   1        return 0;
 111   1      }
 112          
 113          void UpdateBLDCInverter(unsigned char eleccycle) using 1
 114          {
 115   1        EA = 0;
 116   1        switch(eleccycle)
C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    01/23/2019 17:22:28 PAGE 3   

 117   1        {
 118   2          case 1: {     
 119   3            PMEN = 0X30;
 120   3            PWM0L = BLDCSpeed;
 121   3            PWM2L = 0;
 122   3            PWMCON0 |= 0X40;
 123   3            TA = 0X0AA;
 124   3            TA = 0X55;
 125   3            SFRS = 1;
 126   3            PWMINTC=0X10;
 127   3            TA = 0X0AA;
 128   3            TA = 0X55;
 129   3            SFRS = 0;
 130   3            break;
 131   3          }
 132   2          case 2: {
 133   3            PMEN = 0X0C;
 134   3            PWM0L = BLDCSpeed;
 135   3            TA = 0X0AA;
 136   3            TA = 0X55;
 137   3            SFRS = 1;
 138   3            PWM4L = 0;
 139   3            PWMINTC=0X10;
 140   3            TA = 0X0AA;
 141   3            TA = 0X55;
 142   3            SFRS = 0;
 143   3            PWMCON0 |= 0X40;
 144   3            break;
 145   3          }
 146   2          case 3: {
 147   3            PMEN = 0X03;
 148   3            PWM2L = BLDCSpeed;
 149   3            TA = 0X0AA;
 150   3            TA = 0X55;
 151   3            SFRS = 1;
 152   3            PWM4L = 0;
 153   3            PWMINTC=0X12;
 154   3            TA = 0X0AA;
 155   3            TA = 0X55;
 156   3            SFRS = 0;
 157   3            PWMCON0 |= 0X40;
 158   3            break;
 159   3          }
 160   2          case 4: {     
 161   3            PMEN = 0X30;
 162   3            PWM2L = BLDCSpeed;
 163   3            TA = 0X0AA;
 164   3            TA = 0X55;
 165   3            SFRS = 1;
 166   3            PWMINTC=0X12;
 167   3            TA = 0X0AA;
 168   3            TA = 0X55;
 169   3            SFRS = 0;
 170   3            PWM0L = 0;
 171   3            PWMCON0 |= 0X40;
 172   3            break;
 173   3          }
 174   2          case 5: {
 175   3            PMEN = 0X0C;
 176   3            TA = 0X0AA;
 177   3            TA = 0X55;
 178   3            SFRS = 1;
C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    01/23/2019 17:22:28 PAGE 4   

 179   3            PWM4L = BLDCSpeed;
 180   3            PWMINTC=0X14;
 181   3            TA = 0X0AA;
 182   3            TA = 0X55;
 183   3            SFRS = 0;
 184   3            PWM0L = 0;
 185   3            PWMCON0 |= 0X40;
 186   3            break;
 187   3          }
 188   2          case 6: {
 189   3            PMEN = 0X03;
 190   3            TA = 0X0AA;
 191   3            TA = 0X55;
 192   3            SFRS = 1;
 193   3            PWM4L = BLDCSpeed;    
 194   3            PWMINTC=0X14;
 195   3            TA = 0X0AA;
 196   3            TA = 0X55;
 197   3            SFRS = 0;
 198   3            PWM2L = 0;
 199   3            PWMCON0 |= 0X40;
 200   3            break;
 201   3          }
 202   2          case 0:
 203   2            break;
 204   2        }
 205   1        EA = 1;
 206   1      } 
 207          
 208          void BLDCTimerEventHandler() using 1
 209          { 
 210   1        UpdateBLDCInverter(DetermineCurrentElecCycle(BLDCReverse));
 211   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    409    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
