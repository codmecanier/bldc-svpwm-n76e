C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    08/26/2018 18:52:18 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE BLDC_WITH_HALL
OBJECT MODULE PLACED IN .\Objects\BLDC with Hall.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE BLDC with Hall.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\BLDC with Hall.lst) TABS(2) OBJECT(.\Objects\BLDC with Hall.obj)

line level    source

   1          #include <STC8FXX.h>
   2          #include "BLDC with Hall.h"
   3          #include "3PhaseInverter.h"
   4          #define DEADTIME 80
   5          
   6          unsigned int ONtime, OFFtime, TSwitchBLDC;
   7          
   8          static unsigned char PreviousBLDCElecCycle = 0;
   9          
  10          bit SwitchON;
  11          
  12          bit BLDCReverse =1;
  13          
  14          void SetBLDCSpeed(unsigned char speed)
  15          {
  16   1        ONtime = (((unsigned long)TSwitchBLDC * speed) >> 8) & 0xffff;
  17   1        OFFtime = TSwitchBLDC - ONtime;
  18   1        //ONtime = 100;
  19   1        //OFFtime = 400;
  20   1      }
  21          
  22          void BLDCDeadtimeDelay(unsigned int t20418)
  23          {
  24   1        while(--t20418);
  25   1      }
  26          
  27          void HallGpioInit()
  28          {
  29   1        P3M0 &= 0xe3;
  30   1        P3M1 &= 0xe3;
  31   1        HA = 1;
  32   1        HB = 1;
  33   1        HC = 1;
  34   1        PreviousBLDCElecCycle = 0;
  35   1        TSwitchBLDC = 512;
  36   1      }
  37          /*
  38          unsigned char DetermineCurrentElecCycle(bit reverse)
  39          {
  40            if(HA && !HB && HC)
  41              if(reverse)
  42                return 4;
  43              else
  44                return 1;
  45              
  46            if(HA && !HB && !HC)
  47              if(reverse)
  48                return 5;
  49              else
  50                return 2;
  51              
  52            if(HA && HB && !HC)
  53              if(reverse)
  54                return 6;
C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    08/26/2018 18:52:18 PAGE 2   

  55              else
  56                return 3;
  57              
  58            if(!HA && HB && !HC)
  59              if(reverse)
  60                return 1;
  61              else
  62                return 4;
  63              
  64            if(!HA && HB && HC)
  65              if(reverse)
  66                return 2;
  67              else
  68                return 5;
  69              
  70            if(!HA && !HB && HC)
  71              if(reverse)
  72                return 3;
  73              else
  74                return 6;
  75            return 0;
  76          }*/
  77          unsigned char DetermineCurrentElecCycle(bit reverse)
  78          {
  79   1        if(!HA && !HB && !HC)
  80   1          if(reverse)
  81   1            return 2;
  82   1          else
  83   1            return 6;
  84   1          
  85   1        if(HA && !HB && !HC)
  86   1          if(reverse)
  87   1            return 3;
  88   1          else
  89   1            return 1;
  90   1          
  91   1        if(HA && HB && !HC)
  92   1          if(reverse)
  93   1            return 4;
  94   1          else
  95   1            return 2;
  96   1          
  97   1        if(HA && HB && HC)
  98   1          if(reverse)
  99   1            return 5;
 100   1          else
 101   1            return 3;
 102   1          
 103   1        if(!HA && HB && HC)
 104   1          if(reverse)
 105   1            return 6;
 106   1          else
 107   1            return 4;
 108   1          
 109   1        if(!HA && !HB && HC)
 110   1          if(reverse)
 111   1            return 1;
 112   1          else
 113   1            return 5;
 114   1        return 0;
 115   1      }
 116          
C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    08/26/2018 18:52:18 PAGE 3   

 117          void UpdateBLDCInverter(unsigned char eleccycle, bit L_Enable)
 118          {
 119   1        if(PreviousBLDCElecCycle != eleccycle)
 120   1        { 
 121   2          TurnOFFALLSwitches();
 122   2          BLDCDeadtimeDelay(80);
 123   2        }
 124   1        switch(eleccycle)
 125   1        {
 126   2          case 1: {
 127   3            TurnON_HU;
 128   3            if(L_Enable)
 129   3              TurnON_LV;
 130   3            else 
 131   3              TurnOFF_LV;
 132   3            break;
 133   3          }
 134   2          case 2: {
 135   3            TurnON_HU;
 136   3            if(L_Enable)
 137   3              TurnON_LW;
 138   3            else 
 139   3              TurnOFF_LW;
 140   3            break;
 141   3          }
 142   2          case 3: {
 143   3            TurnON_HV;
 144   3            if(L_Enable)
 145   3              TurnON_LW;
 146   3            else 
 147   3              TurnOFF_LW;
 148   3            break;
 149   3          }
 150   2          case 4: {
 151   3            TurnON_HV;
 152   3            if(L_Enable)
 153   3              TurnON_LU;
 154   3            else 
 155   3              TurnOFF_LU;
 156   3            break;
 157   3          }
 158   2          case 5: {
 159   3            TurnON_HW;
 160   3            if(L_Enable)
 161   3              TurnON_LU;
 162   3            else 
 163   3              TurnOFF_LU;
 164   3            break;
 165   3          }
 166   2          case 6: {
 167   3            TurnON_HW;
 168   3            if(L_Enable)
 169   3              TurnON_LV;
 170   3            else 
 171   3              TurnOFF_LV;
 172   3            break;
 173   3          }
 174   2        }
 175   1        PreviousBLDCElecCycle = eleccycle;
 176   1      } 
 177          
 178          unsigned int BLDCTimerEventHandler()
C51 COMPILER V9.59.0.0   BLDC_WITH_HALL                                                    08/26/2018 18:52:18 PAGE 4   

 179          { 
 180   1        SwitchON = !SwitchON;
 181   1        UpdateBLDCInverter(DetermineCurrentElecCycle(BLDCReverse),SwitchON);
 182   1      //  return 418;
 183   1        if(SwitchON)
 184   1        {
 185   2          return ONtime;
 186   2        }
 187   1        return OFFtime;
 188   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    323    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
